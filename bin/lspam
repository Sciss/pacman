#!/usr/bin/env bash
#
# Runs Scaled package manager from its build directory. Mainly for testing.

declare M2REPO=$HOME/.m2/repository
declare MFETCHER=com/samskivert/mfetcher/1.0.2/mfetcher-1.0.2.jar
declare M2MFETCHER=$M2REPO/$MFETCHER
if [ ! -s $M2MFETCHER ]; then
    echo "Missing $M2MFETCHER"
    exit 255
fi

addJvmArg () {
  JVMARGS=( "${JVMARGS[@]}" "$1" )
}
addArg () {
  ARGS=( "${ARGS[@]}" "$1" )
}

declare PACMAN_ROOT=`dirname $0`
PACMAN_ROOT=`cd $PACMAN_ROOT ; cd .. ; pwd`
declare PACMAN_CLASSES=$PACMAN_ROOT/target/classes

# process command line args
declare -a JVMARGS=("-classpath" "$PACMAN_CLASSES:$M2MFETCHER")
declare -a ARGS=("scaled.pacman.Pacman")
while [[ $# -gt 0 ]]; do
    case "$1" in
        -D*     ) addJvmArg "$1"           && shift ;;
        -J*     ) addJvmArg "${1:2}"       && shift ;;
        -d      ) addJvmArg "-Ddebug=true" && shift ;;
        -l|--log) LOG=$2                   && shift 2 ;;
        *       ) addArg "$1"              && shift ;;
    esac
done

# find java
declare JAVA_CMD=java
[[ -e "$JAVA_HOME/bin/java" ]] && JAVA_CMD="$JAVA_HOME/bin/java"

# bombs away!
if [ ! -z "$LOG" ]; then
    exec $JAVA_CMD "${JVMARGS[@]}" "${ARGS[@]}" >$LOG 2>&1 &
else
    exec $JAVA_CMD "${JVMARGS[@]}" "${ARGS[@]}"
fi
